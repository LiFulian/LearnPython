1.while True:
      pass
会使cpu占用100%;


2.cpython解释器中存在GIL，多线程只是能使１个核心运行，（可以表现为两个核，各50%）
　解决方案是：(1)使用Jpython或者其他解释器，或者，(2)调用其他语言的库


3.深浅拷贝对列表:
a = [11, 22]　　　　　　空间1
b = [33, 44]           空间2
c = [a, b]             空间3,  c[0] -> 空间１　　c[1] -> 空间2
d = c                  空间3,  仅添加一个指向空间3的指针

e = copy.copy(c)　　　　空间4,  e[0] -> 空间1    e[1] -> 空间2

f = deepcopy.copy(c)   空间5,  f[0] -> 空间6    f[1] -> 空间7
                                        |                |
                                      [11, 22]        [33, 44]


4. 对元祖：
a = (11, 22)
b = a　　　　　　　    　添加指针
c = copy.copy(a)       添加指针
d = copy.deepcopy(a)   添加指针



5. 元祖中含数列
a = [11, 22]
b = [33, 44]
c = (a, b)
d = c                    添加指针
e = copy.copy(c)　　　　　添加指针
f = copy.deepcopy(c)　　　新空间


6. 深拷贝：只要有一个可变，创建新空间，全部复制
　　浅拷贝: 最外侧可变就创建新空间，不可变就添加指针．　　里面的全部是指针
　　＝　：是添加指针


7.切片：
d = [:] 与　d = copy.copy(c) 一样是属于浅copy


8.字典的copy:
d = dict(name="lfl", age=20)
co = d.copy()    浅拷贝

d = dict(name="lfl", age=20, book=[11, 22])
co = d.copy()   浅拷贝，book的value为内存地址


9. 函数中传参是列表时，传的是引用，如果不想被修改，就传copy.deepcopy(list)